import { findById } from '@zup-it/beagle-web/dist/utils/tree-reading';
const views = {};
function createContext(view, elementId) {
    return {
        replace: params => view.updateWithFetch(params, elementId, 'replace'),
        append: params => view.updateWithFetch(params, elementId, 'append'),
        prepend: params => view.updateWithFetch(params, elementId, 'prepend'),
        updateWithTree: params => view.updateWithTree(Object.assign(Object.assign({}, params), { elementId })),
        getElementId: () => elementId,
        getElement: () => findById(view.getTree(), elementId),
        getView: () => view
    };
}
export function getContext(viewId, elementId) {
    if (!viewId || !elementId)
        throw Error('Beagle: getContext couldn\'t find viewId or elementId');
    const view = views[viewId];
    if (!view)
        throw Error(`Beagle: getContext couldn\'t find view with id ${viewId}`);
    return createContext(view, elementId);
}
export function registerView(viewId, view) {
    views[viewId] = view;
}
export function unregisterView(viewId) {
    delete views[viewId];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2JlYWdsZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsicnVudGltZS9iZWFnbGUtY29udGV4dC9jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQTtBQUdyRSxNQUFNLEtBQUssR0FBK0IsRUFBRSxDQUFBO0FBRTVDLFNBQVMsYUFBYSxDQUFJLElBQW1CLEVBQUUsU0FBaUI7SUFDOUQsT0FBTztRQUNMLE9BQU8sRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUM7UUFDckUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQztRQUNuRSxPQUFPLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDO1FBQ3JFLGNBQWMsRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLGlDQUFNLE1BQU0sS0FBRSxTQUFTLElBQUc7UUFDdkUsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVM7UUFDN0IsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsU0FBUyxDQUFDO1FBQ3JELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJO0tBQ3BCLENBQUE7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxNQUFjLEVBQUUsU0FBaUI7SUFDMUQsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLFNBQVM7UUFBRSxNQUFNLEtBQUssQ0FBQyx1REFBdUQsQ0FBQyxDQUFBO0lBRS9GLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUMxQixJQUFJLENBQUMsSUFBSTtRQUFFLE1BQU0sS0FBSyxDQUFDLGtEQUFrRCxNQUFNLEVBQUUsQ0FBQyxDQUFBO0lBRWxGLE9BQU8sYUFBYSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQTtBQUN2QyxDQUFDO0FBRUQsTUFBTSxVQUFVLFlBQVksQ0FBQyxNQUFNLEVBQUUsSUFBZ0I7SUFDbkQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQTtBQUN0QixDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxNQUFNO0lBQ25DLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCZWFnbGVWaWV3IH0gZnJvbSAnQHp1cC1pdC9iZWFnbGUtd2ViJ1xuaW1wb3J0IHsgZmluZEJ5SWQgfSBmcm9tICdAenVwLWl0L2JlYWdsZS13ZWIvZGlzdC91dGlscy90cmVlLXJlYWRpbmcnXG5pbXBvcnQgeyBCZWFnbGVDb250ZXh0IH0gZnJvbSAnLi4vLi4vdHlwZXMnXG5cbmNvbnN0IHZpZXdzOiBSZWNvcmQ8c3RyaW5nLCBCZWFnbGVWaWV3PiA9IHt9XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQ8VD4odmlldzogQmVhZ2xlVmlldzxUPiwgZWxlbWVudElkOiBzdHJpbmcpOiBCZWFnbGVDb250ZXh0PFQ+IHtcbiAgcmV0dXJuIHtcbiAgICByZXBsYWNlOiBwYXJhbXMgPT4gdmlldy51cGRhdGVXaXRoRmV0Y2gocGFyYW1zLCBlbGVtZW50SWQsICdyZXBsYWNlJyksXG4gICAgYXBwZW5kOiBwYXJhbXMgPT4gdmlldy51cGRhdGVXaXRoRmV0Y2gocGFyYW1zLCBlbGVtZW50SWQsICdhcHBlbmQnKSxcbiAgICBwcmVwZW5kOiBwYXJhbXMgPT4gdmlldy51cGRhdGVXaXRoRmV0Y2gocGFyYW1zLCBlbGVtZW50SWQsICdwcmVwZW5kJyksXG4gICAgdXBkYXRlV2l0aFRyZWU6IHBhcmFtcyA9PiB2aWV3LnVwZGF0ZVdpdGhUcmVlKHsgLi4ucGFyYW1zLCBlbGVtZW50SWQgfSksXG4gICAgZ2V0RWxlbWVudElkOiAoKSA9PiBlbGVtZW50SWQsXG4gICAgZ2V0RWxlbWVudDogKCkgPT4gZmluZEJ5SWQodmlldy5nZXRUcmVlKCksIGVsZW1lbnRJZCksXG4gICAgZ2V0VmlldzogKCkgPT4gdmlld1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZXh0KHZpZXdJZDogc3RyaW5nLCBlbGVtZW50SWQ6IHN0cmluZykge1xuICBpZiAoIXZpZXdJZCB8fCAhZWxlbWVudElkKSB0aHJvdyBFcnJvcignQmVhZ2xlOiBnZXRDb250ZXh0IGNvdWxkblxcJ3QgZmluZCB2aWV3SWQgb3IgZWxlbWVudElkJylcblxuICBjb25zdCB2aWV3ID0gdmlld3Nbdmlld0lkXVxuICBpZiAoIXZpZXcpIHRocm93IEVycm9yKGBCZWFnbGU6IGdldENvbnRleHQgY291bGRuXFwndCBmaW5kIHZpZXcgd2l0aCBpZCAke3ZpZXdJZH1gKVxuXG4gIHJldHVybiBjcmVhdGVDb250ZXh0KHZpZXcsIGVsZW1lbnRJZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyVmlldyh2aWV3SWQsIHZpZXc6IEJlYWdsZVZpZXcpIHtcbiAgdmlld3Nbdmlld0lkXSA9IHZpZXdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVucmVnaXN0ZXJWaWV3KHZpZXdJZCkge1xuICBkZWxldGUgdmlld3Nbdmlld0lkXVxufVxuIl19