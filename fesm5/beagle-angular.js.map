{"version":3,"file":"beagle-angular.js","sources":["ng://beagle-angular/createModule.ts","ng://beagle-angular/constants.ts","ng://beagle-angular/context.ts","ng://beagle-angular/BeagleRemoteView.ts","ng://beagle-angular/provider.ts","ng://beagle-angular/index.ts","ng://beagle-angular/beagle-angular.ts"],"sourcesContent":["import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport createBeagleComponent from './createComponent'\nimport { BeagleAngularConfig } from './types'\nimport createCoreBeagleUIService, { DefaultSchema } from 'beagle-web'\n\nlet hasAlreadyCreatedModule = false\n\nfunction createBeagleModule<Schema = DefaultSchema>(config: BeagleAngularConfig<Schema>) {\n  // if (hasAlreadyCreatedModule) throw new Error('Beagle: beagle module has already been created!')\n  // const beagleService = createCoreBeagleUIService<Schema>(config)\n  // // @ts-ignore\n  // const beagleComponent = createBeagleComponent(config.components, beagleService)\n\n  // return NgModule({\n  //   declarations: [beagleComponent],\n  //   exports: [beagleComponent],\n  //   imports: [config.module, CommonModule],\n  // })(class BeagleModule {})\n}\n\nexport default createBeagleModule\n","export const viewIdAttributeName = '__beagle_view_id'\nexport const selector = 'beagle-remote-view'\n","import { BeagleView, LoadParams } from 'beagle-web'\nimport { findById } from 'beagle-web/dist/utils/tree-reading'\nimport { ViewContainerRef } from '@angular/core'\nimport { selector, viewIdAttributeName } from './constants'\nimport { BeagleContext } from './types'\n\nconst views: Record<string, BeagleView> = {}\n\nfunction createContext(view: BeagleView, elementId: string): BeagleContext {\n  return {\n    replace: (params: LoadParams) => (\n      view.updateWithFetch(params, elementId, 'replace')\n    ),\n    append: (params: LoadParams) => (\n      view.updateWithFetch(params, elementId, 'append')\n    ),\n    prepend: (params: LoadParams) => (\n      view.updateWithFetch(params, elementId, 'prepend')\n    ),\n    getElementId: () => elementId,\n    getElement: () => findById(view.getTree(), elementId),\n    getView: () => view\n  }\n}\n\nfunction getContextByViewIdAndElementId(viewId: string, elementId: string) {\n  const view = views[viewId]\n  if (!viewId) throw Error(`Beagle: getContext couldn\\'t find view with id ${viewId}`)\n  return createContext(view, elementId)\n}\n\nexport function getContext(viewRef: ViewContainerRef) {\n  const viewId = viewRef.element.nativeElement.closest(selector).getAttribute(viewIdAttributeName)\n  const elementId = viewRef.element.nativeElement.id\n  return getContextByViewIdAndElementId(viewId, elementId)\n}\n\nexport function registerView(viewId, view: BeagleView) {\n  views[viewId] = view\n}\n\nexport function unregisterView(viewId) {\n  delete views[viewId]\n}\n","import {\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  NgZone,\n  TemplateRef,\n} from '@angular/core'\nimport { BeagleProvider } from './provider'\nimport { LoadParams, BeagleView, BeagleUIElement } from 'beagle-web'\nimport { registerView, unregisterView } from './context'\n\nlet nextViewId = 1\n\nexport abstract class BeagleRemoteView implements AfterViewInit, OnDestroy, OnChanges {\n  loadParams: LoadParams = { path: '' }\n  tree: BeagleUIElement<any>\n  view: BeagleView\n  viewId = `${nextViewId++}`\n  ngZone: NgZone\n  changeDetector: ChangeDetectorRef\n\n  constructor(\n    beagleProvider: BeagleProvider,\n    ngZone: NgZone,\n    changeDetector: ChangeDetectorRef,\n  ) {\n    this.ngZone = ngZone\n    this.changeDetector = changeDetector\n    const beagleService = beagleProvider.getBeagleUIService()\n    if (!beagleService) {\n      throw new Error('Beagle: you need to start the beagle provider before using a remote view.')\n    }\n    this.view = beagleService.createView()\n    this.view.subscribe(this.updateView)\n    registerView(`${this.viewId}`, this.view)\n  }\n\n  getTemplate(componentName: BeagleUIElement<any>['type']): TemplateRef<any> {\n    return this[componentName]\n  }\n\n  updateView = (uiTree: BeagleUIElement<any>) => {\n    this.ngZone.run(() => {\n      this.tree = uiTree\n      this.changeDetector.detectChanges()\n    })\n  }\n\n  ngAfterViewInit() {\n    this.view.updateWithFetch(this.loadParams)\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if(changes && changes.loadParams) {\n      if (\n        changes.loadParams.previousValue\n        && changes.loadParams.previousValue !== changes.loadParams.currentValue\n      ) {\n        this.view.updateWithFetch(this.loadParams)\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    unregisterView(this.viewId)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { BeagleAngularConfig, BeagleAngularUIService } from './types'\nimport createCoreBeagleUIService, { DefaultSchema } from 'beagle-web'\n\n@Injectable()\nexport class BeagleProvider {\n  private service: BeagleAngularUIService | undefined\n\n  start<Schema = DefaultSchema>(config: BeagleAngularConfig<Schema>) {\n    if (this.service) {\n      console.error('Beagle service has already started!')\n      return\n    }\n    // @ts-ignore // fixme\n    this.service = createCoreBeagleUIService<Schema>(config)\n  }\n\n  getBeagleUIService() {\n    return this.service\n  }\n}\n","import createModule from './createModule'\nexport * from './BeagleRemoteView'\nexport * from './provider'\nexport * from './types'\n\nexport const createBeagleModule = createModule\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["createBeagleModule","createModule"],"mappings":"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"}