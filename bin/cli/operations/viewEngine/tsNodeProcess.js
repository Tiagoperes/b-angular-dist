"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
require("amd-loader");
require("reflect-metadata");
var config_1 = require("./config");
var errors_1 = require("../../errors");
var filesystem_1 = require("../../utils/filesystem");
var styledLogger_1 = require("../../utils/styledLogger");
var packages_1 = require("../../utils/packages");
var viewEngine_1 = require("../../../../src/viewEngine");
function getBeagleMetadataFromExports(allExports) {
    var keys = Object.keys(allExports);
    var beagleModuleName;
    var config;
    keys.forEach(function (key) {
        config = Reflect.getMetadata('beagleConfig', allExports[key]);
        if (config)
            beagleModuleName = key;
    });
    if (!beagleModuleName) {
        throw new errors_1.BeagleCliError('Could not find a beagle module. Please, make sure you annotated your class with @BeagleModule');
    }
    return { beagleModuleName: beagleModuleName, config: config };
}
function getBeagleMetadata(beagleModulePath) {
    var beagleFileExports;
    try {
        beagleFileExports = require(beagleModulePath);
    }
    catch (error) {
        if (typeof error.message !== 'string')
            throw error;
        if (error.message.startsWith('Cannot find module')) {
            throw new errors_1.BeagleCliError("Could not find the beagle module file at \"" + beagleModulePath + "\".");
        }
        if (error.message.match('Unable to compile TypeScript')) {
            throw new errors_1.BeagleCliError("Unable to compile TypeScript, see the error below:\n\n" + error.message);
        }
        throw error;
    }
    return getBeagleMetadataFromExports(beagleFileExports);
}
function start() {
    var viewEngineConfig = config_1.getViewEngineConfig();
    var _a = getBeagleMetadata(viewEngineConfig.beagleModulePath), beagleModuleName = _a.beagleModuleName, config = _a.config;
    var fileContent;
    try {
        fileContent = viewEngine_1.generateViewEngineCode({
            config: config,
            beagleModuleName: beagleModuleName,
            angularVersion: packages_1.getPackageVersion('@angular/core'),
        });
    }
    catch (error) {
        if (error.name !== 'BeagleMetadataError')
            throw error;
        throw new errors_1.BeagleCliError(error.message + ". Be sure you replaced all \"todos\" in the boilerplate code generated by beagle init.");
    }
    filesystem_1.ensureDirectoryExistence(viewEngineConfig.outputPath);
    fs_1.writeFileSync(viewEngineConfig.outputPath, fileContent);
    styledLogger_1.logSuccess("Beagle module for View Engine has been successfully generated at \"" + viewEngineConfig.outputPath + "\"!");
}
exports.start = start;
try {
    start();
}
catch (error) {
    if (!errors_1.isBeagleError(error))
        throw error;
    styledLogger_1.logError(error.message);
    process.exit(error.exitCode);
}
